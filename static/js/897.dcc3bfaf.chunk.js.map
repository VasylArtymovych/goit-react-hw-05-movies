{"version":3,"file":"static/js/897.dcc3bfaf.chunk.js","mappings":"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","sources":["ServerAPI/ServerApi.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Title/Title.jsx","pages/HomePage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nconst axios = require('axios').default;\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = '9c009c00402fb866baf05bd346a2d01d';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    baseURL +\n      'trending/all/day?' +\n      new URLSearchParams({\n        api_key,\n      })\n  );\n\n  const data = response.data;\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    baseURL +\n      `search/movie?` +\n      new URLSearchParams({\n        api_key,\n        query,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n      })\n  );\n\n  const data = response.data;\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}/credits?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}/reviews?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n        page: 1,\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nsearchMovie.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMovieCast.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMovieReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { TbMovie } from 'react-icons/tb';\n\nexport const List = styled('ul')`\n  list-style: none;\n  list-style-position: inside;\n  padding: 10px 20px;\n  font-size: ${p => p.theme.fontSizes.m}px;\n  & li {\n    display: flex;\n    align-items: center;\n    padding: ${p => p.theme.space[2]}px;\n  }\n  & li:nth-child(odd) {\n    background: rgb(222, 208, 172);\n  }\n`;\n\nexport const Icon = styled(TbMovie)`\n  margin-right: 5px;\n`;\n","import { Link, useLocation, generatePath } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport routePaths from 'RouteSettings/Settings';\nimport { List, Icon } from './MoviesList.styled';\n\nexport default function MoviesList({ moviesArr }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {moviesArr.map(({ id, title, original_name }) => {\n        const movieLink = generatePath(routePaths.movie, {\n          movieId: id,\n        });\n\n        return (\n          <li key={id}>\n            <Icon />\n            <Link to={movieLink} state={{ from: location }}>\n              {title || original_name}\n            </Link>\n          </li>\n        );\n      })}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n  moviesArr: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","import styled from 'styled-components';\n\nconst Title = styled('h2')`\n  padding: ${p => p.p || p.theme.space[3]}px;\n  margin-top: 0;\n  border-radius: 8px;\n  color: ${p => p.color || p.theme.colors.white};\n  font-size: ${p => p.fz || p.theme.fontSizes.l}px;\n  font-weight: ${p => p.fw || p.theme.fontWeights.bold};\n  text-align: center;\n  text-shadow: 0 2px 4px orange;\n\n  /* background-image: repeating-linear-gradient(\n    -45deg,\n    rgb(47, 44, 185),\n    rgb(16, 15, 60) 15px,\n    rgb(21, 138, 159) 15px,\n    rgb(21, 138, 159) 30px\n  ); */\n`;\n\nexport default Title;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { fetchTrending } from '../ServerAPI/ServerApi';\nimport Title from 'components/Title/Title';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const movies = await fetchTrending();\n        setMovies(movies);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Title>Trending Today</Title>\n      <MoviesList moviesArr={movies} />\n    </div>\n  );\n}\n"],"names":["axios","require","baseURL","api_key","fetchTrending","get","URLSearchParams","response","data","results","searchMovie","query","language","page","include_adult","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","propTypes","PropTypes","List","styled","p","theme","fontSizes","m","space","Icon","TbMovie","MoviesList","moviesArr","location","useLocation","map","title","original_name","movieLink","generatePath","routePaths","movieId","to","state","from","color","colors","white","fz","l","fw","fontWeights","bold","HomePage","useState","movies","setMovies","useEffect","toast","message"],"sourceRoot":""}