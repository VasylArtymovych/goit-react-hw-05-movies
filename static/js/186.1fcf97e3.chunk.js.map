{"version":3,"file":"static/js/186.1fcf97e3.chunk.js","mappings":"+SAQe,SAASA,IACtB,IAAMC,GAAUC,EAAAA,EAAAA,MAChB,GAA6BC,EAAAA,EAAAA,UAAS,MAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAE4BC,EAAAA,EAAAA,IAAkBN,GAF9C,OAESO,EAFT,OAGGH,EAAUG,GAHb,gDAKGC,EAAAA,GAAAA,MAAY,KAAMC,SALrB,wDAAD,KAQC,CAACT,IAEAG,GACFO,EAAAA,GAAAA,WAAyB,MAIzB,8BACGP,IACEA,EAAQQ,QAAQC,OAAS,GACxB,SAACC,EAAD,UACGV,EAAQQ,QAAQG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACnB,2BACE,qCAAaD,MACb,6BAAKC,OAFEF,SAOb,SAACG,EAAD,4BAYV,IAAML,GAAcM,EAAAA,EAAAA,IAAO,KAAPA,CAAH,oMAGF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,KAEvB,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,MAM5BN,GAAcC,EAAAA,EAAAA,IAAO,IAAPA,CAAH,2GAIN,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,W,0MClEzBC,EAAQC,EAAAA,MAAAA,QAERC,EAAU,gCACVC,EAAU,mCAEHC,EAAa,mCAAG,sGACJJ,EAAMK,IAC3BH,EACE,oBACA,IAAII,gBAAgB,CAClBH,QAAAA,KALqB,cACrBI,EADqB,OASrBC,EAAOD,EAASC,KATK,kBAUpBA,EAAKxB,SAVe,2CAAH,qDAabyB,EAAW,mCAAG,WAAMC,GAAN,yFACFV,EAAMK,IAC3BH,EAAO,gBAEL,IAAII,gBAAgB,CAClBH,QAAAA,EACAO,MAAAA,EACAC,SAAU,QACVC,KAAM,EACNC,eAAe,KATI,cACnBN,EADmB,OAanBC,EAAOD,EAASC,KAbG,kBAclBA,EAAKxB,SAda,2CAAH,sDAiBX8B,EAAc,mCAAG,WAAM1B,GAAN,yFACLY,EAAMK,IAC3BH,EAAO,gBACId,EADJ,KAEL,IAAIkB,gBAAgB,CAClBH,QAAAA,EACAQ,SAAU,WANY,cACtBJ,EADsB,OAUtBC,EAAOD,EAASC,KAVM,kBAWrBA,GAXqB,2CAAH,sDAcdO,EAAc,mCAAG,WAAM3B,GAAN,yFACLY,EAAMK,IAC3BH,EAAO,gBACId,EADJ,aAEL,IAAIkB,gBAAgB,CAClBH,QAAAA,EACAQ,SAAU,WANY,cACtBJ,EADsB,OAUtBC,EAAOD,EAASC,KAVM,kBAWrBA,GAXqB,2CAAH,sDAcd7B,EAAiB,mCAAG,WAAMS,GAAN,yFACRY,EAAMK,IAC3BH,EAAO,gBACId,EADJ,aAEL,IAAIkB,gBAAgB,CAClBH,QAAAA,EACAQ,SAAU,QACVC,KAAM,KAPmB,cACzBL,EADyB,OAWzBC,EAAOD,EAASC,KAXS,kBAYxBA,GAZwB,2CAAH,sDAe9BC,EAAYO,UAAY,CACtBN,MAAOO,IAAAA,OAAAA,YAGTH,EAAeE,UAAY,CACzB5B,GAAI6B,IAAAA,OAAAA,YAGNF,EAAeC,UAAY,CACzB5B,GAAI6B,IAAAA,OAAAA,YAGNtC,EAAkBqC,UAAY,CAC5B5B,GAAI6B,IAAAA,OAAAA","sources":["components/Reviews/Reviews.jsx","components/ServerAPI/ServerApi.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport { animateScroll } from 'react-scroll';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport { fetchMovieReviews } from 'components/ServerAPI/ServerApi';\n\nexport default function Reviews() {\n  const movieId = useOutletContext();\n  const [reviews, setReview] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const reviewData = await fetchMovieReviews(movieId);\n        setReview(reviewData);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  if (reviews) {\n    animateScroll.scrollMore(250);\n  }\n\n  return (\n    <>\n      {reviews &&\n        (reviews.results.length > 0 ? (\n          <ReviewdList>\n            {reviews.results.map(({ id, author, content }) => (\n              <li key={id}>\n                <h2>Author: {author}</h2>\n                <p> {content}</p>\n              </li>\n            ))}\n          </ReviewdList>\n        ) : (\n          <ReviewdText>No rewiews</ReviewdText>\n        ))}\n    </>\n  );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.shape({\n    movieId: PropTypes.string,\n  }),\n};\n\nconst ReviewdList = styled('ul')`\n  list-style: none;\n  padding: 0px 20px 20px;\n  font-size: ${p => p.theme.fontSizes.m}px;\n  & li {\n    padding: ${p => p.theme.space[2]}px;\n  }\n  & li:nth-child(odd) {\n    background: rgb(222, 208, 172);\n  }\n`;\nconst ReviewdText = styled('p')`\n  font-size: 34px;\n  text-align: center;\n  padding-bottom: 20px;\n  color: ${p => p.theme.colors.accent};\n`;\n","import PropTypes from 'prop-types';\nconst axios = require('axios').default;\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = '9c009c00402fb866baf05bd346a2d01d';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    baseURL +\n      'trending/all/day?' +\n      new URLSearchParams({\n        api_key,\n      })\n  );\n\n  const data = response.data;\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    baseURL +\n      `search/movie?` +\n      new URLSearchParams({\n        api_key,\n        query,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n      })\n  );\n\n  const data = response.data;\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}/credits?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}/reviews?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n        page: 1,\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nsearchMovie.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMovieCast.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMovieReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n"],"names":["Reviews","movieId","useOutletContext","useState","reviews","setReview","useEffect","fetchMovieReviews","reviewData","toast","message","animateScroll","results","length","ReviewdList","map","id","author","content","ReviewdText","styled","p","theme","fontSizes","m","space","colors","accent","axios","require","baseURL","api_key","fetchTrending","get","URLSearchParams","response","data","searchMovie","query","language","page","include_adult","fetchMovieById","fetchMovieCast","propTypes","PropTypes"],"sourceRoot":""}