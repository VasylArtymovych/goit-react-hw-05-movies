{"version":3,"file":"static/js/310.93d86dee.chunk.js","mappings":"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","sources":["ServerAPI/ServerApi.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","hooks/usePagination.js","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nconst axios = require('axios').default;\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = '9c009c00402fb866baf05bd346a2d01d';\n\nexport const fetchTrending = async (page = 1) => {\n  const response = await axios.get(\n    baseURL +\n      'trending/all/day?' +\n      new URLSearchParams({\n        api_key,\n        page: page,\n      })\n  );\n\n  const data = response.data;\n  return {\n    results: data.results,\n    page: data.page,\n    totalPages: data.total_pages,\n  };\n};\n\nexport const searchMovie = async (query, page = 1) => {\n  const response = await axios.get(\n    baseURL +\n      `search/movie?` +\n      new URLSearchParams({\n        api_key,\n        query,\n        language: 'en-US',\n        page: page,\n        include_adult: false,\n      })\n  );\n\n  const data = response.data;\n  return {\n    results: data.results,\n    page: data.page,\n    totalPages: data.total_pages,\n  };\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}/credits?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}/reviews?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n        page: 1,\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nsearchMovie.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMovieCast.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMovieReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { TbMovie } from 'react-icons/tb';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled('ul')`\n  list-style: none;\n  list-style-position: inside;\n  padding: 10px 20px;\n  font-size: ${p => p.theme.fontSizes.m}px;\n  & li {\n    display: flex;\n    align-items: center;\n    padding: ${p => p.theme.space[2]}px;\n  }\n  & li:nth-child(odd) {\n    background: rgb(222, 208, 172);\n  }\n\n  & li a {\n    color: ${p => p.theme.colors.text};\n  }\n`;\n\nexport const Icon = styled(TbMovie)`\n  margin-right: 5px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  &:hover:not(.active) {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { useLocation, generatePath } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport routePaths from 'RouteSettings/Settings';\nimport { List, Icon, StyledLink } from './MoviesList.styled';\n\nexport default function MoviesList({ moviesArr }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {moviesArr.map(({ id, title, original_name }) => {\n        const movieLink = generatePath(routePaths.movie, {\n          movieId: id,\n        });\n\n        return (\n          <li key={id}>\n            <Icon />\n            <StyledLink\n              to={location.pathname === '/' ? movieLink : `${id}`}\n              state={{ from: location }}\n            >\n              {title || original_name}\n            </StyledLink>\n          </li>\n        );\n      })}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n  moviesArr: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","import styled, { css } from 'styled-components';\n\nexport const StyledBtn = styled('button')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 25px;\n  padding: ${p => p.theme.space[3]}px;\n  &:not(:last-child) {\n    margin-right: ${p => p.theme.space[2]}px;\n  }\n  font-size: ${p => p.theme.fontSizes.xs}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n  background: ${p =>\n    p.current ? p.theme.colors.active : p.theme.colors.white};\n  color: ${p => (p.current ? p.theme.colors.white : p.theme.colors.text)};\n  ${p => {\n    if (!p.current) {\n      return css`\n        &:hover {\n          background: ${p => p.theme.colors.accent};\n          box-shadow: 0px 0px 4px 4px ${p => p.theme.colors.white};\n          font-size: ${p => p.theme.fontSizes.s}px;\n        }\n      `;\n    }\n  }}\n\n  @media (min-width: 768px) {\n    width: 45px;\n    height: 35px;\n    font-size: ${p => p.theme.fontSizes.s}px;\n    ${p => {\n      if (!p.current) {\n        return css`\n          &:hover {\n            font-size: ${p => p.theme.fontSizes.m}px;\n          }\n        `;\n      }\n    }}\n  }\n`;\n","import Box from 'components/Box';\nimport { StyledBtn } from './Pagination.styled';\n\nconst Pagination = ({ page, totalPages, onClick }) => {\n  const beforeTwoPage = page - 2;\n  const beforePage = page - 1;\n  const afterTwoPage = page + 2;\n  const afterPage = page + 1;\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItem=\"center\"\n      mt={4}\n      pb={4}\n    >\n      {page > 1 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          left\n        </StyledBtn>\n      )}\n      {page > 1 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          1\n        </StyledBtn>\n      )}\n      {page > 4 && <StyledBtn type=\"button\">...</StyledBtn>}\n      {page > 3 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {beforeTwoPage}\n        </StyledBtn>\n      )}\n      {page > 2 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {beforePage}\n        </StyledBtn>\n      )}\n      <StyledBtn type=\"button\" onClick={onClick} current>\n        {page}\n      </StyledBtn>\n      {page < totalPages - 1 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {afterPage}\n        </StyledBtn>\n      )}\n      {page < totalPages - 2 && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {afterTwoPage}\n        </StyledBtn>\n      )}\n      {page < totalPages - 3 && <StyledBtn type=\"button\">...</StyledBtn>}\n      {page < totalPages && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          {totalPages}\n        </StyledBtn>\n      )}\n      {page < totalPages && (\n        <StyledBtn type=\"button\" onClick={onClick}>\n          right\n        </StyledBtn>\n      )}\n    </Box>\n  );\n};\n\nexport default Pagination;\n","import { useState } from 'react';\nconst usePagination = (page = 1, total = 1) => {\n  const [currentPage, setCurrentPage] = useState(page);\n  const [totalPages, setTotalPages] = useState(total);\n\n  const onBtnClick = e => {\n    const value = e.target.textContent;\n    if (value === 'right') {\n      setCurrentPage(state => state + 1);\n      return;\n    }\n    if (value === 'left') {\n      setCurrentPage(state => state - 1);\n      return;\n    }\n    setCurrentPage(Number(value));\n  };\n\n  return { currentPage, totalPages, setTotalPages, onBtnClick };\n};\n\nexport default usePagination;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst StyledInput = styled(Field)`\n  width: 320px;\n  min-height: 25px;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding-left: ${p => p.theme.space[3]}px;\n  background: rgb(216, 203, 149);\n`;\n\nconst Button = styled('button')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 25px;\n  height: 25px;\n  border: 0;\n  background: ${p => p.theme.colors.background};\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n    background: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport { StyledForm, StyledInput, Button };\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { BiSearch } from 'react-icons/bi';\nimport { StyledForm, StyledInput, Button } from './SearchForm.styled';\n\nconst validationSchema = Yup.object().shape({\n  search: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nconst SearchForm = ({ onSubmit }) => {\n  const handleSubmit = (value, { resetForm }) => {\n    const { search } = value;\n    onSubmit(search);\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ search: '' }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledInput type=\"text\" name=\"search\" placeholder=\"search name\" />\n          <Button type=\"submit\">\n            <BiSearch size={22} color=\"white\" />\n          </Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { searchMovie } from '../ServerAPI/ServerApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { toast } from 'react-toastify';\nimport Pagination from 'components/Pagination';\nimport usePagination from 'hooks/usePagination';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [queryName, setQueryName] = useState('');\n  const { currentPage, totalPages, setTotalPages, onBtnClick } =\n    usePagination();\n\n  useEffect(() => {\n    async function fetchMovesByName() {\n      try {\n        const { results, totalPages } = await searchMovie(\n          queryName,\n          currentPage\n        );\n        if (results.length === 0) {\n          toast.info(`Movie with name: ${queryName} not found!`);\n          setMovies([]);\n          return;\n        }\n        setMovies(results);\n        setTotalPages(totalPages);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    }\n    if (!queryName) {\n      return;\n    }\n    fetchMovesByName();\n  }, [currentPage, queryName, setTotalPages]);\n\n  const onSubmitForm = name => {\n    setQueryName(name);\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={onSubmitForm} />\n      <MoviesList moviesArr={movies} />\n      {movies.length > 0 && (\n        <Pagination\n          page={currentPage}\n          totalPages={totalPages}\n          onClick={onBtnClick}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":["axios","require","baseURL","api_key","fetchTrending","page","get","URLSearchParams","response","data","results","totalPages","total_pages","searchMovie","query","language","include_adult","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","propTypes","PropTypes","List","styled","p","theme","fontSizes","m","space","colors","text","Icon","TbMovie","StyledLink","NavLink","accent","MoviesList","moviesArr","location","useLocation","map","title","original_name","movieLink","generatePath","routePaths","movieId","to","pathname","state","from","StyledBtn","xs","fontWeights","bold","radii","normal","current","active","white","css","s","onClick","beforeTwoPage","beforePage","afterTwoPage","afterPage","Box","display","justifyContent","alignItem","mt","pb","type","total","useState","currentPage","setCurrentPage","setTotalPages","onBtnClick","e","value","target","textContent","Number","StyledForm","Form","StyledInput","Field","Button","background","validationSchema","Yup","shape","search","min","max","required","onSubmit","initialValues","resetForm","name","placeholder","size","color","MoviesPage","movies","setMovies","queryName","setQueryName","usePagination","useEffect","length","toast","message","fetchMovesByName","Pagination"],"sourceRoot":""}