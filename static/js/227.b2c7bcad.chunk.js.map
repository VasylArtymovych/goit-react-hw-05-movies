{"version":3,"file":"static/js/227.b2c7bcad.chunk.js","mappings":"4TACMA,EAAQC,EAAAA,MAAAA,QAERC,EAAU,gCACVC,EAAU,mCAEHC,EAAa,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACJL,EAAMM,IAC3BJ,EACE,oBACA,IAAIK,gBAAgB,CAClBJ,QAAAA,EACAE,KAAMA,KANe,cACrBG,EADqB,OAUrBC,EAAOD,EAASC,KAVK,kBAWpB,CACLC,QAASD,EAAKC,QACdL,KAAMI,EAAKJ,KACXM,WAAYF,EAAKG,cAdQ,2CAAH,qDAkBbC,EAAW,mCAAG,WAAOC,GAAP,8FAAcT,EAAd,+BAAqB,EAArB,SACFL,EAAMM,IAC3BJ,EAAO,gBAEL,IAAIK,gBAAgB,CAClBJ,QAAAA,EACAW,MAAAA,EACAC,SAAU,QACVV,KAAMA,EACNW,eAAe,KATI,cACnBR,EADmB,OAanBC,EAAOD,EAASC,KAbG,kBAclB,CACLC,QAASD,EAAKC,QACdL,KAAMI,EAAKJ,KACXM,WAAYF,EAAKG,cAjBM,2CAAH,sDAqBXK,EAAc,mCAAG,WAAMC,GAAN,yFACLlB,EAAMM,IAC3BJ,EAAO,gBACIgB,EADJ,KAEL,IAAIX,gBAAgB,CAClBJ,QAAAA,EACAY,SAAU,WANY,cACtBP,EADsB,OAUtBC,EAAOD,EAASC,KAVM,kBAWrBA,GAXqB,2CAAH,sDAcdU,EAAc,mCAAG,WAAMD,GAAN,yFACLlB,EAAMM,IAC3BJ,EAAO,gBACIgB,EADJ,aAEL,IAAIX,gBAAgB,CAClBJ,QAAAA,EACAY,SAAU,WANY,cACtBP,EADsB,OAUtBC,EAAOD,EAASC,KAVM,kBAWrBA,GAXqB,2CAAH,sDAcdW,EAAiB,mCAAG,WAAMF,GAAN,yFACRlB,EAAMM,IAC3BJ,EAAO,gBACIgB,EADJ,aAEL,IAAIX,gBAAgB,CAClBJ,QAAAA,EACAY,SAAU,QACVV,KAAM,KAPmB,cACzBG,EADyB,OAWzBC,EAAOD,EAASC,KAXS,kBAYxBA,GAZwB,2CAAH,sDAe9BI,EAAYQ,UAAY,CACtBP,MAAOQ,IAAAA,OAAAA,YAGTL,EAAeI,UAAY,CACzBH,GAAII,IAAAA,OAAAA,YAGNH,EAAeE,UAAY,CACzBH,GAAII,IAAAA,OAAAA,YAGNF,EAAkBC,UAAY,CAC5BH,GAAII,IAAAA,OAAAA,a,sLCnGAC,GAAYC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,yKAUTC,GAAYD,EAAAA,EAAAA,IAAO,MAAPA,CAAH,kMAaTE,GAAaF,EAAAA,EAAAA,IAAO,MAAPA,CAAH,6FAOVG,GAAaH,EAAAA,EAAAA,IAAO,KAAPA,CAAH,mQAEL,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SAEd,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,QAMpCC,GAAaV,EAAAA,EAAAA,IAAO,IAAPA,CAAH,0GAOVW,GAAaX,EAAAA,EAAAA,IAAO,OAAPA,CAAH,wEAEC,SAAAI,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,QAGpCG,GAAOZ,EAAAA,EAAAA,IAAO,KAAPA,CAAH,kJAUJa,GAAYb,EAAAA,EAAAA,IAAO,SAAPA,CAAH,2aASF,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,U,mBC1DlB,SAASC,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC1BC,EACND,EADMC,cAAeC,EACrBF,EADqBE,YAAaC,EAClCH,EADkCG,MAAOC,EACzCJ,EADyCI,SAAUC,EACnDL,EADmDK,OAAQC,EAC3DN,EAD2DM,aAEvDC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EACJV,GAAiBC,EATJ,mCAUD,OAAID,QAAJ,IAAIA,EAAAA,EAAiBC,GAC7BU,EACN,OACE,iCACE,SAACf,EAAD,CACEgB,KAAK,SACLC,QAAS,WAAO,IAAD,MAEbP,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUM,aAAX,iBAAC,EAAiBC,YAAlB,aAAC,EAAuBC,gBAAxB,QAAoC,YAJhD,sBAUA,UAAClC,EAAD,YACE,SAACE,EAAD,WACE,gBAAKiC,IAAKP,EAASQ,IAAKhB,OAE1B,UAACjB,EAAD,YACE,SAACC,EAAD,UAAagB,KACb,UAACT,EAAD,YACE,SAACC,EAAD,0BADF,IACwCyB,KAAKC,MAAqB,GAAff,GADnD,QAIA,UAACZ,EAAD,YACE,SAACC,EAAD,wBADF,IACsCS,MAEtC,SAACT,EAAD,uBACA,SAACC,EAAD,UACGS,EAAOiB,KAAI,gBAAG5C,EAAH,EAAGA,GAAI6C,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAAL7C,iB,sCC5CR,SAAS8C,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOzB,EAAP,KAAc0B,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFlB,GAAWC,EAAAA,EAAAA,MAajB,OAXAmB,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAE2BpD,EAAAA,EAAAA,IAAekD,GAF1C,OAESG,EAFT,OAGGJ,EAASI,GAHZ,gDAKGC,EAAAA,GAAAA,MAAY,KAAMC,SALrB,wDAAD,KAQC,CAACL,KAGF,gCACG3B,IAAS,SAACD,EAAD,CAAWC,MAAOA,KAE5B,SAACiC,EAAD,sCACA,UAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,WACE,SAACC,EAAD,CAAYC,GAAG,OAAOtB,MAAO,CAAEC,KAAMP,GAArC,mBAGA,SAAC2B,EAAD,CAAYC,GAAG,UAAUtB,MAAO,CAAEC,KAAMP,GAAxC,yBAKF,SAAC,EAAA6B,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,CAAQC,QAASd,SAMzB,IAAMM,GAAQjD,EAAAA,EAAAA,IAAO,KAAPA,CAAH,2OAGA,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SAChB,SAAAH,GAAC,OAAIA,EAAEC,MAAMqD,UAAUC,KACrB,SAAAvD,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,QAEb,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,UAG3CsC,GAAapD,EAAAA,EAAAA,IAAO4D,EAAAA,GAAP5D,CAAH,qHAGL,SAAAI,GAAC,OAAIA,EAAEyD,OAASzD,EAAEC,MAAMC,OAAOC,SAG7B,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,W","sources":["ServerAPI/ServerApi.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nconst axios = require('axios').default;\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = '9c009c00402fb866baf05bd346a2d01d';\n\nexport const fetchTrending = async (page = 1) => {\n  const response = await axios.get(\n    baseURL +\n      'trending/all/day?' +\n      new URLSearchParams({\n        api_key,\n        page: page,\n      })\n  );\n\n  const data = response.data;\n  return {\n    results: data.results,\n    page: data.page,\n    totalPages: data.total_pages,\n  };\n};\n\nexport const searchMovie = async (query, page = 1) => {\n  const response = await axios.get(\n    baseURL +\n      `search/movie?` +\n      new URLSearchParams({\n        api_key,\n        query,\n        language: 'en-US',\n        page: page,\n        include_adult: false,\n      })\n  );\n\n  const data = response.data;\n  return {\n    results: data.results,\n    page: data.page,\n    totalPages: data.total_pages,\n  };\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}/credits?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}/reviews?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n        page: 1,\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nsearchMovie.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMovieCast.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMovieReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nconst Container = styled('div')`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  @media (min-width: 768px) {\n    padding: 20px;\n    flex-direction: row;\n  }\n`;\n\nconst ImgWraper = styled('div')`\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n  width: 40%;\n  margin-right: 20px;\n  & img {\n    display: block;\n    width: 100%;\n    object-fit: fill;\n  }\n`;\n\nconst TextWraper = styled('div')`\n  width: 100%;\n  @media (min-width: 768px) {\n    width: 50%;\n  }\n`;\n\nconst MovieTitle = styled('h2')`\n  margin-bottom: 7px;\n  color: ${p => p.theme.colors.white};\n  font-size: 22px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  text-align: center;\n  text-shadow: -1px -1px 0 rgb(16, 15, 60), 1px -1px 0 rgb(16, 15, 60),\n    -1px 1px 0 rgb(16, 15, 60), 1px 1px 0 rgb(16, 15, 60);\n`;\n\nconst StyledText = styled('p')`\n  margin-bottom: 7px;\n  @media (min-width: 1200px) {\n    font-size: 18px;\n  }\n`;\n\nconst StyledSpan = styled('span')`\n  color: rgb(16, 15, 60);\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nconst List = styled('ul')`\n  list-style: none;\n  display: flex;\n  margin-bottom: 10px;\n  li {\n    margin-right: 5px;\n    font-size: 14px;\n  }\n`;\n\nconst GoBackBtn = styled('button')`\n  width: 65px;\n  margin: 0 0 0 10px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  color: white;\n  background: linear-gradient(to top right, rgb(16, 15, 60), rgb(85, 204, 225));\n  &:hover {\n    color: ${p => p.theme.colors.accent};\n    background: linear-gradient(\n      to top left,\n      rgb(16, 15, 60),\n      rgb(85, 204, 225)\n    );\n  }\n  @media (min-width: 768px) {\n    margin: 0 0 0 20px;\n  }\n`;\n\nexport {\n  Container,\n  ImgWraper,\n  TextWraper,\n  MovieTitle,\n  StyledText,\n  StyledSpan,\n  List,\n  GoBackBtn,\n};\n","import PropTypes from 'prop-types';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport {\n  Container,\n  ImgWraper,\n  TextWraper,\n  MovieTitle,\n  StyledText,\n  StyledSpan,\n  List,\n  GoBackBtn,\n} from './MovieCard.styled';\nimport defaultImg from '../../images/default.jpeg';\nconst IMG_PATH = 'https://image.tmdb.org/t/p/w500';\n\nexport default function MovieCard({ movie }) {\n  const { backdrop_path, poster_path, title, overview, genres, vote_average } =\n    movie;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const imgPath =\n    backdrop_path || poster_path\n      ? IMG_PATH + (backdrop_path ?? poster_path)\n      : defaultImg;\n  return (\n    <>\n      <GoBackBtn\n        type=\"button\"\n        onClick={() => {\n          // navigate(-1);\n          navigate(location?.state?.from?.pathname ?? '/movies');\n        }}\n      >\n        Go back\n      </GoBackBtn>\n\n      <Container>\n        <ImgWraper>\n          <img src={imgPath} alt={title} />\n        </ImgWraper>\n        <TextWraper>\n          <MovieTitle>{title}</MovieTitle>\n          <StyledText>\n            <StyledSpan>User score:</StyledSpan> {Math.round(vote_average * 10)}\n            %\n          </StyledText>\n          <StyledText>\n            <StyledSpan>Overview:</StyledSpan> {overview}\n          </StyledText>\n          <StyledSpan>genres:</StyledSpan>\n          <List>\n            {genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </List>\n        </TextWraper>\n      </Container>\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({}).isRequired,\n};\n","import { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { fetchMovieById } from '../ServerAPI/ServerApi';\nimport Loader from 'components/Loader/Loader';\nimport Box from 'components/Box';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const movieData = await fetchMovieById(movieId);\n        setMovie(movieData);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && <MovieCard movie={movie} />}\n\n      <Title>Additional information</Title>\n      <Box pb={20}>\n        <StyledLink to=\"cast\" state={{ from: location }}>\n          Cast\n        </StyledLink>\n        <StyledLink to=\"reviews\" state={{ from: location }}>\n          Reviews\n        </StyledLink>\n      </Box>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet context={movieId} />\n      </Suspense>\n    </>\n  );\n}\n\nconst Title = styled('h3')`\n  padding: 5px 10px;\n  margin-top: 0;\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.theme.fontSizes.m}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  background: linear-gradient(to top left, rgb(16, 15, 60), rgb(85, 204, 225));\n  border-bottom: 1px solid ${p => p.theme.colors.accent};\n`;\n\nconst StyledLink = styled(NavLink)`\n  display: block;\n  margin: 5px 20px;\n  color: ${p => p.color || p.theme.colors.white};\n\n  &.active {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n"],"names":["axios","require","baseURL","api_key","fetchTrending","page","get","URLSearchParams","response","data","results","totalPages","total_pages","searchMovie","query","language","include_adult","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","propTypes","PropTypes","Container","styled","ImgWraper","TextWraper","MovieTitle","p","theme","colors","white","fontWeights","bold","StyledText","StyledSpan","List","GoBackBtn","accent","MovieCard","movie","backdrop_path","poster_path","title","overview","genres","vote_average","navigate","useNavigate","location","useLocation","imgPath","defaultImg","type","onClick","state","from","pathname","src","alt","Math","round","map","name","MovieDetailsPage","useState","setMovie","movieId","useParams","useEffect","movieData","toast","message","Title","Box","pb","StyledLink","to","Suspense","fallback","Loader","context","fontSizes","m","NavLink","color"],"sourceRoot":""}