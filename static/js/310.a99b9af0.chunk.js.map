{"version":3,"file":"static/js/310.a99b9af0.chunk.js","mappings":"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","sources":["ServerAPI/ServerApi.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nconst axios = require('axios').default;\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst api_key = '9c009c00402fb866baf05bd346a2d01d';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    baseURL +\n      'trending/all/day?' +\n      new URLSearchParams({\n        api_key,\n      })\n  );\n\n  const data = response.data;\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    baseURL +\n      `search/movie?` +\n      new URLSearchParams({\n        api_key,\n        query,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n      })\n  );\n\n  const data = response.data;\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}/credits?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    baseURL +\n      `movie/${id}/reviews?` +\n      new URLSearchParams({\n        api_key,\n        language: 'en-US',\n        page: 1,\n      })\n  );\n\n  const data = response.data;\n  return data;\n};\n\nsearchMovie.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMovieCast.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nfetchMovieReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { TbMovie } from 'react-icons/tb';\n\nexport const List = styled('ul')`\n  list-style: none;\n  list-style-position: inside;\n  padding: 10px 20px;\n  font-size: ${p => p.theme.fontSizes.m}px;\n  & li {\n    display: flex;\n    align-items: center;\n    padding: ${p => p.theme.space[2]}px;\n  }\n  & li:nth-child(odd) {\n    background: rgb(222, 208, 172);\n  }\n`;\n\nexport const Icon = styled(TbMovie)`\n  margin-right: 5px;\n`;\n","import { Link, useLocation, generatePath } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport routePaths from 'RouteSettings/Settings';\nimport { List, Icon } from './MoviesList.styled';\n\nexport default function MoviesList({ moviesArr }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {moviesArr.map(({ id, title, original_name }) => {\n        const movieLink = generatePath(routePaths.movie, {\n          movieId: id,\n        });\n\n        return (\n          <li key={id}>\n            <Icon />\n            <Link to={movieLink} state={{ from: location }}>\n              {title || original_name}\n            </Link>\n          </li>\n        );\n      })}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n  moviesArr: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst StyledInput = styled(Field)`\n  width: 320px;\n  min-height: 25px;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding-left: ${p => p.theme.space[3]}px;\n  background: rgb(216, 203, 149);\n`;\n\nconst Button = styled('button')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 25px;\n  height: 25px;\n  border: 0;\n  background: ${p => p.theme.colors.background};\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n    background: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport { StyledForm, StyledInput, Button };\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { BiSearch } from 'react-icons/bi';\nimport { StyledForm, StyledInput, Button } from './SearchForm.styled';\n\nconst validationSchema = Yup.object().shape({\n  search: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nconst SearchForm = ({ onSubmit }) => {\n  const handleSubmit = (value, { resetForm }) => {\n    const { search } = value;\n    onSubmit(search);\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{ search: '' }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledInput type=\"text\" name=\"search\" placeholder=\"search name\" />\n          <Button type=\"submit\">\n            <BiSearch size={22} color=\"white\" />\n          </Button>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { searchMovie } from '../ServerAPI/ServerApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { toast } from 'react-toastify';\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n\n  const onSubmitForm = async name => {\n    try {\n      const data = await searchMovie(name);\n      if (data.length === 0) {\n        toast.info(`Movie with name: ${name} not found!`);\n        return;\n      }\n      setMovies(data);\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={onSubmitForm} />\n      <MoviesList moviesArr={movies} />\n    </div>\n  );\n}\n"],"names":["axios","require","baseURL","api_key","fetchTrending","get","URLSearchParams","response","data","results","searchMovie","query","language","page","include_adult","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","propTypes","PropTypes","List","styled","p","theme","fontSizes","m","space","Icon","TbMovie","MoviesList","moviesArr","location","useLocation","map","title","original_name","movieLink","generatePath","routePaths","movieId","to","state","from","StyledForm","Form","StyledInput","Field","Button","colors","background","accent","validationSchema","Yup","shape","search","min","max","required","onSubmit","initialValues","value","resetForm","type","name","placeholder","size","color","MoviesPage","useState","movies","setMovies","onSubmitForm","length","toast","message"],"sourceRoot":""}